apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "blueapi.fullname" . }}
  labels:
    {{- include "blueapi.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "blueapi.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- if .Values.restartOnConfigChange }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "blueapi.selectorLabels" . | nindent 8 }}
    spec:
      hostNetwork: {{ .Values.hostNetwork }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "blueapi.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
      - name: worker-config
        projected:
          sources:
          - configMap:
              name: {{ include "blueapi.fullname" . }}-config
      {{- if .Values.scratch.hostPath }}
      - name: scratch-host
        hostPath:
          path: {{ .Values.scratch.hostPath }}
          type: Directory
      {{- end }}
      - name: venv
        emptyDir:
          sizeLimit: 5Gi
      initContainers:
      {{- if .Values.scratch.hostPath }}
      - name: init-venv
        image: busybox:1.28
        command: ['sh', '-c', "cp -r /venv /emptyDir/venv"]
        volumeMounts:
          - name: venv
            mountPath: /emptyDir
      - name: init-scratch
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        args: 
          - "setup-scratch"
        volumeMounts:
          - name: worker-config
            mountPath: "/config"
            readOnly: true
          - name: scratch-host
            mountPath: {{ .Values.scratch.containerPath }}
            mountPropagation: HostToContainer
          - name: venv
            mountPath: /venv
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: worker-config
              mountPath: "/config"
              readOnly: true
            {{- if .Values.scratch.hostPath }}
            - name: scratch-host
              mountPath: {{ .Values.scratch.containerPath }}
              mountPropagation: HostToContainer
            {{- end }}
            - name: venv
              mountPath: /venv
          args:
            - "-c"
            - "/config/config.yaml"
            - "serve"
          env:
            {{- if .Values.extraEnvVars }}
            {{- tpl .Values.extraEnvVars . | nindent 10 }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
