from collections.abc import Generator
from typing import Any, TypeVar

from bluesky.utils import Msg, MsgGenerator

PlanReturningStr = MsgGenerator[str]
T = TypeVar("T")


# Valid plans
def plan_a(a: int) -> MsgGenerator: ...
def plan_b(b: str) -> MsgGenerator[None]: ...
def plan_c(c: bool) -> MsgGenerator[int]: ...
def plan_d(d: int) -> Generator[Msg, None, Any]: ...
def plan_e(e: str) -> Generator[Msg, int, Any]: ...
def plan_f(f: bool) -> PlanReturningStr: ...
def plan_g(g: T) -> MsgGenerator[T]: ...


# Not plans
def util_1() -> int: ...
def util_2() -> None: ...
def util_3(a: str) -> str: ...
