[build-system]
requires = ["setuptools>=64", "setuptools_scm[toml]>=6.2", "wheel"]
build-backend = "setuptools.build_meta"

[project]
dependencies = [
    "bluesky",
    "ophyd",
    "nslsii",
    "pyepics",
    "pydantic",
    "stomp.py",
    "scanspec",
    "PyYAML",
    "click",
]

[project.optional-dependencies]dev = [
"black",
"mypy",
"flake8-isort",
"Flake8-pyproject",
"pipdeptree",
"pre-commit",
"pydata-sphinx-theme>=0.12",
"pytest-cov",
"sphinx-autobuild",
"sphinx-copybutton",
"sphinx-design",
"tox-direct",
"types-mock",
"types-PyYAML",
]name = "blueapi"
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
description = "One line description of your module"
dynamic = ["version"]
license.file = "LICENSE"
readme = "README.rst"
requires-python = ">=3.8"
dynamic = ["version"]
license.file = "LICENSE"
readme = "README.rst"
requires-python = ">=3.7"

[project.scripts]
bluesky = "blueapi.cli:main"

[project.urls]
GitHub = "https://github.com/DiamondLightSource/blueapi"

[[project.authors]] # Further authors may be added by duplicating this section
email = "callum.forrester@diamond.ac.uk"
name = "Callum Forrester"


[tool.setuptools_scm]
write_to = "src/blueapi/_version.py"

[tool.mypy]
ignore_missing_imports = true # Ignore missing stubs in imported modules

[tool.isort]
float_to_top = true
profile = "black"

[tool.flake8]
extend-ignore = [
    "E203", # See https://github.com/PyCQA/pycodestyle/issues/373
    "F811", # support typing.overload decorator
    "F722", # allow Annotated[typ, some_func("some string")]
]
max-line-length = 88 # Respect black's line length (default 88),
exclude = [".tox", "venv"]


[tool.pytest.ini_options]

--cov=python3_pip_skeleton --cov-report term --cov-report xml:cov.xml
    """
# https://iscinumpy.gitlab.io/post/bound-version-constraints/#watch-for-warnings
filterwarnings = "error"
>>>>>>> 64d2a03ba80d52b6d22ca541bb32eb6b455d83f9
# Doctest python code in docs, python code in src docstrings, test functions in tests
testpaths = "docs src tests"

[tool.coverage.run]
data_file = "/tmp/blueapi.coverage"
omit = ["src/blueapi/startup/**/*"]

[tool.coverage.paths]
# Tests are run from installed location, map back to the src directory
source = ["src", "**/site-packages/"]

# tox must currently be configured via an embedded ini string
# See: https://github.com/tox-dev/tox/issues/999
[tool.tox]
legacy_tox_ini = """
# Run pytest with all our checkers, and don't spam us with massive tracebacks on error
addopts = """
    --tb=native -vv --doctest-modules --doctest-glob="*.rst"
    --cov=blueapi --cov-report term --cov-report xml:cov.xml
    --ignore=src/blueapi/startup
    """
# https://iscinumpy.gitlab.io/post/bound-version-constraints/#watch-for-warnings
filterwarnings = ["error", "ignore::DeprecationWarning"]
[tox]
skipsdist=True

[testenv:{pre-commit,mypy,pytest,docs}]
direct = True
passenv = *
allowlist_externals = 
    pytest 
    pre-commit
    mypy
    sphinx-build
    sphinx-autobuild
commands =
    pytest: pytest {posargs}
mypy: mypy src tests {posargs}
pre-commit: pre-commit run --all-files {posargs}
docs: sphinx-{posargs:build -EW --keep-going} -T docs build/html
"""
# Don't create a virtualenv for the command, requires tox-direct plugin
