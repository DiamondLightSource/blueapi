components:
  schemas:
    DeviceModel:
      additionalProperties: false
      description: Representation of a device
      properties:
        name:
          description: Name of the device
          title: Name
          type: string
        protocols:
          description: Protocols that a device conforms to, indicating its capabilities
          items:
            type: string
          title: Protocols
          type: array
      required:
      - name
      - protocols
      title: DeviceModel
      type: object
    DeviceResponse:
      additionalProperties: false
      description: Response to a query for devices
      properties:
        devices:
          description: Devices available to use in plans
          items:
            $ref: '#/components/schemas/DeviceModel'
          title: Devices
          type: array
      required:
      - devices
      title: DeviceResponse
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    PlanModel:
      additionalProperties: false
      description: Representation of a plan
      properties:
        description:
          description: Docstring of the plan
          title: Description
          type: string
        name:
          description: Name of the plan
          title: Name
          type: string
        schema:
          description: Schema of the plan's parameters
          title: Schema
          type: object
      required:
      - name
      title: PlanModel
      type: object
    PlanResponse:
      additionalProperties: false
      description: Response to a query for plans
      properties:
        plans:
          description: Plans available to use by a worker
          items:
            $ref: '#/components/schemas/PlanModel'
          title: Plans
          type: array
      required:
      - plans
      title: PlanResponse
      type: object
    RunPlan:
      additionalProperties: false
      description: Task that will run a plan
      properties:
        name:
          description: Name of plan to run
          title: Name
          type: string
        params:
          description: Values for parameters to plan, if any
          title: Params
          type: object
      required:
      - name
      title: RunPlan
      type: object
    StateChangeRequest:
      additionalProperties: false
      description: Request to change the state of the worker.
      properties:
        defer:
          default: false
          description: Should worker defer Pausing until the next checkpoint
          title: Defer
          type: boolean
        new_state:
          $ref: '#/components/schemas/WorkerState'
        reason:
          description: The reason for the current run to be aborted
          title: Reason
          type: string
      required:
      - new_state
      title: StateChangeRequest
      type: object
    TaskResponse:
      additionalProperties: false
      description: Acknowledgement that a task has started, includes its ID
      properties:
        task_id:
          description: Unique identifier for the task
          title: Task Id
          type: string
      required:
      - task_id
      title: TaskResponse
      type: object
    TrackableTask:
      additionalProperties: false
      description: A representation of a task that the worker recognizes
      properties:
        errors:
          items:
            type: string
          title: Errors
          type: array
        is_complete:
          default: false
          title: Is Complete
          type: boolean
        is_pending:
          default: true
          title: Is Pending
          type: boolean
        task:
          title: Task
        task_id:
          title: Task Id
          type: string
      required:
      - task_id
      title: TrackableTask
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
    WorkerState:
      description: The state of the Worker.
      enum:
      - IDLE
      - RUNNING
      - PAUSING
      - PAUSED
      - HALTING
      - STOPPING
      - ABORTING
      - SUSPENDING
      - PANICKED
      - UNKNOWN
      title: WorkerState
      type: string
    WorkerTask:
      additionalProperties: false
      description: Worker's active task ID, can be None
      properties:
        task_id:
          description: The ID of the current task, None if the worker is idle
          title: Task Id
          type: string
      title: WorkerTask
      type: object
info:
  title: BlueAPI Control
  version: 0.0.3
openapi: 3.1.0
paths:
  /devices:
    get:
      description: Retrieve information about all available devices.
      operationId: get_devices_devices_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResponse'
          description: Successful Response
      summary: Get Devices
  /devices/{name}:
    get:
      description: Retrieve information about a devices by its (unique) name.
      operationId: get_device_by_name_devices__name__get
      parameters:
      - in: path
        name: name
        required: true
        schema:
          title: Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceModel'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Device By Name
  /plans:
    get:
      description: Retrieve information about all available plans.
      operationId: get_plans_plans_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanResponse'
          description: Successful Response
      summary: Get Plans
  /plans/{name}:
    get:
      description: Retrieve information about a plan by its (unique) name.
      operationId: get_plan_by_name_plans__name__get
      parameters:
      - in: path
        name: name
        required: true
        schema:
          title: Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanModel'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Plan By Name
  /tasks:
    post:
      description: Submit a task to the worker.
      operationId: submit_task_tasks_post
      requestBody:
        content:
          application/json:
            example:
              name: count
              params:
                detectors:
                - x
            schema:
              $ref: '#/components/schemas/RunPlan'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Submit Task
  /tasks/{task_id}:
    delete:
      operationId: delete_submitted_task_tasks__task_id__delete
      parameters:
      - in: path
        name: task_id
        required: true
        schema:
          title: Task Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Submitted Task
    get:
      description: Retrieve a task
      operationId: get_task_tasks__task_id__get
      parameters:
      - in: path
        name: task_id
        required: true
        schema:
          title: Task Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackableTask'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Task
  /worker/state:
    get:
      description: Get the State of the Worker
      operationId: get_state_worker_state_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkerState'
          description: Successful Response
      summary: Get State
    put:
      description: "Request that the worker is put into a particular state.\nReturns\
        \ the state of the worker at the end of the call.\n\n- **The following transitions\
        \ are allowed and return 202: Accepted**\n- If the worker is **PAUSED**, new_state\
        \ may be **RUNNING** to resume.\n- If the worker is **RUNNING**, new_state\
        \ may be **PAUSED** to pause:\n    - If defer is False (default): pauses and\
        \ rewinds to the previous checkpoint\n    - If defer is True: waits until\
        \ the next checkpoint to pause\n    - **If the task has no checkpoints, the\
        \ task will instead be Aborted**\n- If the worker is **RUNNING/PAUSED**, new_state\
        \ may be **STOPPING** to stop.\n    Stop marks any currently open Runs in\
        \ the Task as a success and ends the task.\n- If the worker is **RUNNING/PAUSED**,\
        \ new_state may be **ABORTING** to abort.\n    Abort marks any currently open\
        \ Runs in the Task as a Failure and ends the task.\n    - If reason is set,\
        \ the reason will be passed as the reason for the Run failure.\n- **All other\
        \ transitions return 400: Bad Request**"
      operationId: set_state_worker_state_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateChangeRequest'
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkerState'
          description: Successful Response
          detail: Transition requested
        '400':
          description: Bad Request
          detail: Transition not allowed
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Set State
  /worker/task:
    get:
      operationId: get_active_task_worker_task_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkerTask'
          description: Successful Response
      summary: Get Active Task
    put:
      operationId: update_task_worker_task_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkerTask'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkerTask'
          description: Successful Response
        '409':
          description: Conflict
          worker: already active
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Task
