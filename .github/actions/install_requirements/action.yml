name: Install requirements
description: Install a version of python then call pip install and report what was installed
inputs:
  python-version:
    description: Python version to install, default is from Dockerfile
    default: "dev"
  pip-install:
    description: Parameters to pass to pip install
    default: "$([ -f dev-requirements.txt ] && echo '-c dev-requirements.txt') -e .[dev]"
  workflow-name:
    description: Which workflow started this.
    default: "help"
  token:
    description: Git token
    required: true

runs:
  using: composite
  steps:
    - name: Get version of python
      run: |
        PYTHON_VERSION="${{ inputs.python-version }}"
        if [ $PYTHON_VERSION == "dev" ]; then
          PYTHON_VERSION=$(sed -n "s/ARG PYTHON_VERSION=//p" Dockerfile)
        fi
        echo "PYTHON_VERSION=$PYTHON_VERSION" >> "$GITHUB_ENV"
      shell: bash
    #Setup python env
    - name: Setup python
      id: setup_python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    #Load caches if match
    - name: Restore cached virtualenv
      id: cache-restore
      uses: actions/cache/restore@v4
      with:
        key: venv-${{ runner.os }}-${{ inputs.python-version }}-${{ inputs.workflow-name }}
        path: .venv
    #install missing packages
    - name: Install packages
      run: |
        python -m venv .venv
        source .venv/bin/activate
        python -m pip install ${{ inputs.pip-install }}
        echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH
        echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV
      shell: bash

    - name: Delete Previous Cache
      if: ${{ steps.cache-restore.outputs.cache-hit }}
      continue-on-error: true
      run: |
        gh extension install actions/gh-actions-cache
        gh actions-cache delete "venv-${{ runner.os }}-${{ inputs.python-version }}-${{inputs.workflow-name}}" --confirm
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      shell: bash

    - name: Saved cached virtualenv
      uses: actions/cache/save@v4
      with:
        key: venv-${{ runner.os }}-${{ inputs.python-version }}-${{inputs.workflow-name}}
        path: .venv

    - name: Report what was installed
      run: pip freeze
      shell: bash
