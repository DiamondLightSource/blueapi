name: Build and publish container
on:
  workflow_call:

env:
  GCR_IMAGE: ghcr.io/diamondlightsource/blueapi
  HELM_VERSION: 3.10.3

jobs:
  build_container:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Need this to get version number from last tag
          fetch-depth: 0
      - name: Validate PEP 440 version compliance
        run: |
          python -m pip install packaging
          python -c "
      import re
      from packaging.version import Version, InvalidVersion

      ref = '${GITHUB_REF##*/}'
      try:
          version = Version(ref)
          print(f'PEP 440 compliant version: {version}')
      except InvalidVersion:
          print(f'Invalid PEP 440 version: {ref}')
          exit(1)
        "


      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Docker Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and export to Docker local cache
        uses: docker/build-push-action@v5
        with:
          context: .
          # Need load and tags so we can test it below
          load: true
          tags: tag_for_testing

      - name: Test cli works in cached runtime image
        run: docker run --rm tag_for_testing --version

      - name: Create tags for publishing image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest

      - name: Push cached image to container registry
        if: github.ref_type == 'tag'
        uses: docker/build-push-action@v5
        # This does not build the image again, it will find the image in the
        # Docker cache and publish it
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  helm_publish:
    name: publish gcr
    runs-on: ubuntu-latest
    environment: prod
    needs: build_container
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: install helm
        uses: Azure/setup-helm@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        id: install

      - name: login to acr using helm
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ${{ env.GCR_IMAGE }} --username ${{ github.repository_owner }} --password-stdin
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@57396166ad8aefe6098280995947635806a0e6ea
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag

      - name: Convert PEP 440 version to SemVer
        run: |
          ref="${GITHUB_REF##*/}"
          # Convert alpha/beta/rc versions from PEP 440 to SemVer
          if [[ "$ref" =~ ([0-9]+\.[0-9]+\.[0-9]+)(a|b|rc)([0-9]+) ]]; then
            ref="${BASH_REMATCH[1]}-${BASH_REMATCH[2]}${BASH_REMATCH[3]}"
          fi
          echo "Converted version: $ref"
          echo "VERSION=$ref" >> $GITHUB_ENV

      - name: package chart and push it
        run: |
          sed -i "$ a appVersion: ${VERSION}" helm/blueapi/Chart.yaml
          helm dependencies update helm/blueapi
          helm package helm/blueapi --version ${VERSION} -d /tmp/
          helm push /tmp/blueapi-${VERSION}.tgz oci://ghcr.io/diamondlightsource/charts
