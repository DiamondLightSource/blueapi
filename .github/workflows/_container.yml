name: Build and publish container
on:
  workflow_call:

env:
  GHCR_IMAGE: ghcr.io/diamondlightsource/blueapi
  HELM_VERSION: 3.10.3

jobs:
  build_container:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Need this to get version number from last tag
          fetch-depth: 0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Docker Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and export to Docker local cache
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_RECORD_UPLOAD: false
        with:
          context: .
          # Need load and tags so we can test it below
          load: true
          tags: tag_for_testing

      - name: Test cli works in cached runtime image
        run: docker run --rm tag_for_testing --version

      - name: Create tags for publishing image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=tag
            type=raw,value=latest

      - name: Push cached image to container registry
        if: github.ref_type == 'tag'
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_RECORD_UPLOAD: false
        # This does not build the image again, it will find the image in the
        # Docker cache and publish it
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Install Helm
        uses: Azure/setup-helm@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        id: install

      - name: Log in to GitHub Container Registry
        if: github.ref_type == 'tag'
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ${{ env.GHCR_IMAGE }} --username ${{ github.repository_owner }} --password-stdin

      - name: package chart and push it
        if: github.ref_type == 'tag'
        run: |
          helm dependencies update helm/blueapi
          helm package helm/blueapi --version ${{ steps.meta.outputs.version }} --app-version ${{ steps.meta.outputs.version }} -d /tmp/
          helm push /tmp/blueapi-${{ steps.meta.outputs.version }}.tgz oci://ghcr.io/diamondlightsource/charts
